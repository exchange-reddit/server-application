package com.omniversity.verification_service.token.entity;

import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * About:
 * Registration token is the default token that shall be used to verify the users' emails upon registration to our system.
 * Users shall receive an email that contains the registration token (verification code).
 * Users shall submit the code to the system and the system checks this via the combination of email info + registration token value.
 * -------------------------------------------------------------------------------------------------------------------------------------
 * Attributes:
 * id: Autogenerated identifier set by the DB
 * verificationCode: Verification code to check that the validity of email
 * expiryDate: Validity period of the token (Controlled by RegistrationTokenService)
 * email: Email address set for the verification token
 */

@Entity
@Table(name="registrationToken")
public class RegistrationToken {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String token;
    private LocalDateTime expiryDate;
    private String email;
    private int verificationType;

    public RegistrationToken() {}

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getToken() {
        return token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    public LocalDateTime getExpiryDate() {
        return this.expiryDate;
    }
    public void setExpiryDate(LocalDateTime expiryDate) {
        this.expiryDate = expiryDate;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public int getVerificationType() {
        return this.verificationType;
    }

    public void setVerificationType(int type) {
        this.verificationType = type;
    }
}

